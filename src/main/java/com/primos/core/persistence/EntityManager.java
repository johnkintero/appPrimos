/* *****************************************************************************************************************************************************
 * *****************************************************************************************************************************************************
 * ***************************** ************ ********** ************ ******     ****** **************** **************** ******************************
 * ***************************** ************ ********** ************  ******   ******  **************** **************** ******************************
 * ***************************** **      **** **    ****      **       ******* ***  **  ****        **** ****             ******************************
 * ***************************** **      **** **    ****      **       **   ******  **  ****        **** ****             ******************************
 * ***************************** **      **** **    ****      **       **   **  **  **  ****        **** ****             ******************************
 * ***************************** ************ **********      **       **   **  **  **  ****        **** **************** ******************************
 * ***************************** ************ **********      **       **   **  **  **  ****        **** **************** ******************************
 * ***************************** **           ****            **       **   **  **  **  ****        ****             **** ******************************
 * ***************************** **           ** **           **       **   **  **  **  ****        ****             **** ******************************
 * ***************************** **           **  **          **       **   **  **  **  ****        ****             **** ******************************
 * ***************************** **           **   **         **       **   **  **  **  ****        ****             **** ******************************
 * ***************************** **           **    **   ************  **   **  **  **  **************** **************** ******************************
 * ***************************** **           **     **  ************  **   **  **  **  **************** **************** ******************************
 * *****************************************************************************************************************************************************
 * *****************************************************************************************************************************************************
 * *****************************************************************************************************************************************************
 * |---------------------------------------------------------------------------------------------------------------------------------------------------|
 * |                                                        Control de versiones                                                                       |
 * |---------|--------------|----------------|---------------------------------------------------------------------------------------------------------|
 * | Version |    Fecha     |  Responsable   |                                                  Comentarios                                            |
 * |---------|--------------|----------------|---------------------------------------------------------------------------------------------------------|
 * |   1.0   |  14/10/2018  |      GAOQ      | Creacion de la intefaz generica de implementacion de un controlador de transacciones.                   |
 * |---------|--------------|----------------|---------------------------------------------------------------------------------------------------------|
 */

package com.primos.core.persistence;

import java.io.Serializable;
import java.util.List;

/**
 * Interface that establish the guidelines for all entities that will be create.
 * @author GAOQ
 * @version 1.0
 * @since 14/10/2018.
 */
public interface EntityManager {
    
    /**
     * Charge a object from data base.
     * @param classType class of object.
     * @param id Object the id for finds the object.
     * @return Object the object from database.
     */
    public Object load(Class classType, Serializable id);
    
    /**
     * Save a object into database.
     * @param o Object to save.
     * @return true if the object was save, false otherwise.
     */
    public boolean save(Object o);
    
    /**
     * Update a object into database.
     * @param o Object to update.
     * @return true if the object was update, false otherwise.
     */
    public boolean update(Object o);
    
    /**
     * Return all objects from database.
     * @param classType Class the class type.
     * @return ArrayList all objects from database.
     */
    public List getAll(Class classType);
    
    /**
     * Execute a SQL sentence specific. Return a list of objects.
     * @param sql String the SQL sentence.
     * @return List the result set for this sentence.
     */
    public List runSQL(String sql);
}